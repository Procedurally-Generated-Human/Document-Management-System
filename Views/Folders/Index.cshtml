@using Microsoft.AspNetCore.Mvc.Localization;
@inject IViewLocalizer Localizer;

@model dynamic

@{
    ViewBag.Title = Localizer["Index"];
}

<h1>@Localizer["Index"]</h1>

<br>

<form asp-controller="Folders" asp-action="Index" method="get">
    <p>
        <input type="text" name="SearchString" value="@ViewBag.searchString"/>
        <input type="submit" class="btn btn-secondary" value="@Localizer["Search"]"/>
    </p>
</form>

<p>
    <a asp-action="Create" asp-route-id="@ViewBag.currentID"><button type="button" class="btn btn-secondary">@Localizer["New Folder"]</button></a>
    <a asp-controller="Documents" asp-action="Create" asp-route-parentId="@ViewBag.currentID"><button type="button" class="btn btn-secondary">@Localizer["New Document"]</button></a>
</p>

<br>

<table class="table">
    <thead>
        <tr>
            <th>
                @Localizer[Html.DisplayNameForInnerType(((Folder folder) => folder.Name))]
            </th>
        </tr>
    </thead>
    <tbody>
    @foreach(Folder folder in Model.Folders) {
        <tr>
            <td>
                <a asp-action="index" asp-route-id="@folder.Id">@Html.DisplayFor(modelItem => folder.Name)</a>
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@folder.Id">@Localizer["Edit"]</a> |
                <a asp-action="Delete" asp-route-id="@folder.Id">@Localizer["Delete"]</a>
            </td>
        </tr>
    }
    @foreach (Document document in Model.Documents)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => document.Name)
            </td>
        </tr>
    }


    </tbody>
</table>
